##
## Docker compose ADGS   docker-compose.adgs.localhost.yml
##
##


# =============================================================================
# CREATE adgs USER in LOCALHOST
# sudo useradd -u 2020 adgs -g adgs

# =============================================================================
# DISABLE LOCALHOST POSTGRESQL
# sudo service postgresql stop
# sudo lsof -i -P | grep LISTEN | grep :5432
# =============================================================================


# =============================================================================
# BUILD DEC IMAGE
# rake -f build_aux.rake aux:install
# rake -f build_dec.rake dec:build[adgs,localhost,adgs_test_pg]
# rake -f build_dec.rake dec:install[adgs,localhost,adgs_test_pg]
# rake -f build_dec.rake dec:image_build[adgs,localhost,adgs]
# => naming to docker.io/library/app_adgs_dec:latest
# =============================================================================

# =============================================================================
# BUILD MINARC IMAGE
# rake -f build_minarc.rake minarc:build[adgs,localhost,adgs_test_pg]
# rake -f build_minarc.rake minarc:install[adgs,localhost,adgs_test_pg]
# rake -f build_minarc.rake minarc:image_build[adgs,localhost,adgs]
# => naming to docker.io/library/app_adgs_minarc:latest
# =============================================================================

# =============================================================================
# SERVICE START / STOP / STATS / PS :
# docker compose -f install/docker/docker-compose.adgs.localhost.yml up
# docker compose -f install/docker/docker-compose.adgs.localhost.yml down --volumes --remove-orphans
# docker compose -f install/docker/docker-compose.adgs.localhost.yml stats
# docker compose -f install/docker/docker-compose.adgs.localhost.yml ps
# =============================================================================

# =============================================================================
# TROUBLESHOOT:
# docker exec -it app_adgs_minarc /bin/bash
# docker run -ti -v /data/adgs:/data/adgs  --entrypoint=bash app_adgs_minarc
# docker run -ti --entrypoint=bash app_adgs_dec
# docker run -ti -v /data/adgs:/data/adgs  --entrypoint=bash app_adgs_dec 
# docker compose -f install/docker/docker-compose.adgs.localhost.yml up -d adgs_db_postgres
# docker compose -f install/docker/docker-compose.adgs.localhost.yml exec adgs_db_postgres env
# docker compose -f install/docker/docker-compose.adgs.localhost.yml up -d adgs_db_postgres app_adgs_dec
# docker compose -f install/docker/docker-compose.adgs.localhost.yml down --volumes --remove-orphans
# docker inspect --format='{{json .NetworkSettings.Networks}}' adgs_db_postgres | jq
# =============================================================================

# =============================================================================
# CREATE DATABASE
# docker exec -it adgs_db_postgres psql -U adgs -c "create database adgs"

# /etc/hosts : 127.0.0.1	localhost app_adgs_minarc

# MINARC
# curl -k -v -u test:test --max-time 12000 --connect-timeout 60 --keepalive-time 12000 -L -f -s -X GET https://app_adgs_minarc:4567/dec/arc/minArcStatGlobal.json
# sinatra is adding backslashes to json


# curl -k -v -u test:test --max-time 12000 --connect-timeout 60 --keepalive-time 12000 -L -f -s -X GET https://app_adgs_minarc:4567/dec/arc/requestArchive/* | jq
# "{\"total_size\":\"66.18 MiB\",\"total_size_in_disk\":\"66.45 MiB\",\"total_size_original\":\"66.19 MiB\",\"num_total_files\":140,\"num_files_last_hour\":0,\"num_file_types\":2,\"last_date_archive\":\"2024-05-18T18:25:43.773Z\",\"last_archive_filename\":\"ims2024139_4km_v1.3.nc.gz\",\"last_hour_size_original\":\"0.00 B\",\"last_hour_size\":\"0.00 B\",\"last_hour_size_in_disk\":\"0.00 B\"}\n"




volumes:
   volume_adgs:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: /data

services:

   adgs_db_postgres:
      image: "postgres:11"
      container_name: adgs_db_postgres
      hostname: adgs_db_postgres
      restart: always
      environment:
         POSTGRES_DB                : "adgs_db"
         POSTGRES_USER              : "adgs"
         POSTGRES_PASSWORD          : "adg$"
         POSTGRES_HOST_AUTH_METHOD  : "trust"
      ports:
         - "5432:5432"
      volumes:
         - /data/adgs/db:/var/lib/postgresql/data

   app_adgs_minarc:
      depends_on:
         - "adgs_db_postgres"
      image          : app_adgs_minarc
      container_name : app_adgs_minarc
      hostname       : app_adgs_minarc
      ports:
         - 4567:4567
      environment    :
         - MINARC_PLUGIN="ADGS"
         - TMPDIR="/tmp"
      # restart        : always
      volumes:
         - /data:/data

   app_adgs_dec:
      depends_on:
         - "adgs_db_postgres"
      image          : app_adgs_dec
      container_name : app_adgs_dec
      hostname       : app_adgs_dec
      # restart: always
      volumes:
         - /data:/data
