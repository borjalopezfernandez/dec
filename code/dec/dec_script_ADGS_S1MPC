#!/usr/bin/env ruby

require 'date'
require 'json'

require 'dec/DEC_Environment'
require 'dec/ReadInterfaceConfig'
require 'dec/ReadConfigIncoming'
require 'dec/InterfaceHandlerCustom_S1MPC'

include DEC

@entity         = "S1MPC"

self.load_config
@logger     = self.load_logger("script_S1MPC")

handler = nil

begin
    handler = InterfaceHandlerCustom_S1MPC.new(@entity, @logger)
rescue Exception => e
    @logger.error("[DEC_799] Fatal Error: #{e.to_s} #{'1F480'.hex.chr('UTF-8')}")
    exit(99)
end

if handler.usage == true then
    handler.print_usage
    exit(0)
end

@listOnly       = handler.listOnly
@isDebugMode    = handler.isDebugMode
@queryDate      = handler.queryDate


@logger.info("[DEC_005] I/F #{@entity}: Polling Started - List mode is #{@listOnly}")

cmd             = "curl -s -k https://sar-mpc.eu/api/v1/?metadata_date__gt=#{@queryDate}"
result          = `#{cmd}`
json_reply      = JSON.parse(result)
num_products    = json_reply['count']
arr_products    = json_reply['results']

if @isDebugMode == true then
    @logger.debug(cmd)
    @logger.debug("Found #{num_products} products")
end

listOfFiles = Array.new
listOfURL   = Array.new
numFiles    = 0

arr_products.each{
    |item|

    if @isDebugMode == true then
        @logger.debug(item)
    end

    listOfFiles << item['physical_name']
    listOfURL   << item['remote_url']

    if handler.previouslyReceived?(item['physical_name']) == true then
        @logger.warn("[DEC_301] I/F #{@entity}: #{item['physical_name']} has been previously received")
        next
    end

    if @listOnly == true then
        @logger.info("[DEC_105] I/F #{@entity}: File #{item['physical_name']} is available")
        numFiles=numFiles+1
        next
    end

    handler.downloadFile(item['physical_name'], item['remote_url'])

}

if @listOnly == true then
    @logger.info("[DEC_060] I/F #{@entity}: Polling Completed / New file(s) #{numFiles} available for pull")
else
    if numFiles == 0 then
        handler.triggerEventPullOK
    else
        handler.triggerEventPullOKNewFiles
    end
end

@logger.info("[DEC_100] I/F #{@entity}: Pull iteration completed successfully #{'1F57A'.hex.chr('UTF-8')}")

exit(0)
