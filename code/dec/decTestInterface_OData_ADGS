#!/usr/bin/env ruby

#########################################################################
###
### === Ruby source for #DEC_TestCases class
###
### === Written by DEIMOS Space S.L. (bolf)
###
### === Data Exchange Component
### 
### module DEC
###
#########################################################################

require 'rubygems'
require 'test/unit'
require 'fileutils'

require 'Date'

require 'cuc/Log4rLoggerFactory'
require 'cuc/DirUtils'

require 'ctc/API_ADGS'
require 'ctc/API_MINARC_OData'

require 'dec/DEC_Environment'
require 'dec/ReadConfigDEC'


##  1  - test_count



##  2  - test_class_delay_s2
##  3  - test_class_sensing_s1
##  4  - test_command_delay_s1a
##  5.1  - test_command_creation_gnss_s1a
##  5.2  - test_command_creation_gnss_s2a
##  6  - test_command_creation_s1a
##  7  - test_command_creation_s1a_long
##  8  - test_command_creation_delay_s1a
##  9  - test_s1a_validity
##  10 - test_s1b_validity_json
##  11 - test_s1a_string
##  12 - test_s1b_creation
##  13 - test_s2_datatake

# Select a single test of the suite

# ruby decUnitTests_DHUS -n test_my_method 


class DECTestInterface_OData_ADGS < Test::Unit::TestCase

   include CUC::DirUtils
   include DEC

   
   # Order of the test cases execution according to defintion within code
   #self.test_order = :defined
   
      
   ## ------------------------------------------------------
   
   Test::Unit.at_start do
      @my_argv = ARGV.dup
      puts
      puts "======================================"
      puts "DEC ODATA Interface Test Cases #{self.class.name.split('::').last}"
      puts
      puts
      puts "DO NOT EXECUTE IN THE PRODUCTION ENVIRONMENT !!!!!"
      puts
      puts "or with operational data in the archive"
      puts
      puts "THINK CAREFULLY !!! "
      puts
      puts "do you want to continue Y/n" 
      puts
      puts
      
      bBatchmode = false
            
      @my_argv.each{|arg|
         if arg == "batchmode" then
            puts "batch mode execution on"
            bBatchmode = true
            break
         end
      }
       
      if bBatchmode == false then
         c = STDIN.getc
         if c != 'Y' then
            exit(99)
         end
      end   
      
      @@conf = DEC_Environment.new
      @@conf.wrapper_load_config_development
      puts      
      @@conf.wrapper_print_environment
      puts    
      @@conf.createEnvironmentDirs

      if @@conf.wrapper_check_environment == false then
         puts "DEC environment not suited for unit tests"
         puts
         exit(99)
      end
      
      @@server = ADGS::API_SERVER
      
   end
   
   ## ------------------------------------------------------

   Test::Unit.at_exit do
      puts "End of DEC tests 4 ADGS"
   end

   def setup
      puts "setup"
   end

   def teardown
      puts "teardown"
   end

   ## -----------------------------------------------------------
   ##
   ## https://<service-root-uri>/odata/v1/Products?$count=true

   def test_count
      puts
      puts "================================================"
      puts "MINARC_UnitTests::#{__method__.to_s}"
      puts
              
      ## -------------------------------

      ## -------------------------------
      ## well-formed query request request
      
      ## https://<service-root-uri>/odata/v1/Products?$count=true

      url = "#{@@server}#{ARC_ODATA::API_URL_PRODUCT}"
      
      cmd = "curl -s -k -u test:test \'#{url}/$count?'"
      puts cmd
      ret = system(cmd)      
      assert(ret, "successful curl query")
      
      ## -------------------------------
   end
   ## -----------------------------------------------------------

   ## ------------------------------------------------------
   def test_adgs_s2

      puts "================================================"
      puts "#{self.class.name.split('::').last}::#{__method__.to_s}"
      puts
      
      cmd = "decODataClient -u test -p test -q adgs:s2:S2 --creation \"2021-03-16T00:00:00.000,2021-03-16T01:00:00.000\" -L /tmp"  # "-D"
      puts cmd
      assert(system(cmd), "#{cmd} query")
      puts

      sleep(5.0)
   
   end

   ## ------------------------------------------------------

end


## ===================================================================




