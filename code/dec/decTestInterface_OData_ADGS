#!/usr/bin/env ruby

#########################################################################
###
### === Ruby source for #DEC_TestCases class
###
### === Written by DEIMOS Space S.L. (bolf)
###
### === Data Exchange Component
### 
### module DEC
###
#########################################################################

require 'rubygems'
require 'test/unit'
require 'fileutils'

require 'Date'

require 'cuc/Log4rLoggerFactory'
require 'cuc/DirUtils'

require 'dec/DEC_Environment'
require 'dec/ReadConfigDEC'


# Preconditions:
# 1 - setup 

# 2 - teardown



# Select a single test of the suite

# ruby decUnitTests_DHUS -n test_my_method 


class DECTestInterfaceDHUS < Test::Unit::TestCase

   include CUC::DirUtils
   include DEC

   
   # Order of the test cases execution according to defintion within code
   #self.test_order = :defined
   
      
   ## ------------------------------------------------------
   
   Test::Unit.at_start do      
   #def setup
      @my_argv = ARGV.dup
      puts
      puts "======================================"
      puts "DEC ODATA Interface Test Cases #{self.class.name.split('::').last}"
      puts
      puts
      puts "DO NOT EXECUTE IN THE PRODUCTION ENVIRONMENT !!!!!"
      puts
      puts "or with operational data in the archive"
      puts
      puts "THINK CAREFULLY !!! "
      puts
      puts "do you want to continue Y/n" 
      puts
      puts
      
      bBatchmode = false
            
      @my_argv.each{|arg|
         if arg == "batchmode" then
            puts "batch mode execution on"
            bBatchmode = true
            break
         end
      }
       
      if bBatchmode == false then
         c = STDIN.getc
         if c != 'Y' then
            exit(99)
         end
      end   
      
            @@arrDownloadFiles = [ \
                           "finals.all", \
                           "gpsrapid.out" \
                           ]

      
=begin
      puts
      puts
      puts "THINK IT TWICE  !!! "
      puts
      puts "do you want to continue Y/n" 
      puts
      puts
      
      c = STDIN.getc
            
      
      if c != 'Y' then
         exit(99)
      end

=end      
      
      @@conf = DEC_Environment.new
      
      @@conf.wrapper_load_config_development


      puts      
      @@conf.wrapper_print_environment
      puts
      
      
      @@conf.createEnvironmentDirs


      if @@conf.wrapper_check_environment == false then
         puts "DEC environment not suited for unit tests"
         puts
         exit(99)
      end
      
   end
   
   ## ------------------------------------------------------

   Test::Unit.at_exit do
      puts "End of DEC tests 4 DHUS"
   end

   def setup
      puts "setup"
   end

   def teardown
      puts "teardown"
   end

   ## ------------------------------------------------------
   def test_adgs_s2

      puts "================================================"
      puts "#{self.class.name.split('::').last}::#{__method__.to_s}"
      puts
      
      cmd = "decODataClient -u test -p test -q adgs:s1:S2 -L /tmp"  # "-D"
      puts cmd
      assert(system(cmd), "#{cmd} query")
      puts

      sleep(5.0)
   
   end

   ## ------------------------------------------------------






end


## ===================================================================




