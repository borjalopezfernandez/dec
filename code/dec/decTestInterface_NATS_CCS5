#!/usr/bin/env ruby -W0

#########################################################################
###
### === Ruby source for #DEC_TestCases class
###
### === Written by DEIMOS Space S.L. (bolf)
###
### === Data Exchange Component
### 
### module DEC
###
#########################################################################

require 'rubygems'
require 'test/unit'
require 'fileutils'
require 'date'

require 'cuc/Log4rLoggerFactory'
require 'cuc/DirUtils'

require 'ctc/API_ADGS'
require 'ctc/API_MINARC_OData'

require 'dec/DEC_Environment'
require 'dec/ReadConfigDEC'


class DECTestInterface_NATS_CCS5 < Test::Unit::TestCase

   include CUC::DirUtils
   include DEC

   
   # Order of the test cases execution according to defintion within code
   #self.test_order = :defined
   
      
   ## ------------------------------------------------------
   
   Test::Unit.at_start do
      @my_argv = ARGV.dup
      puts
      puts "======================================"
      puts "DEC NAOS NATS CCS5 Interface Test Cases #{self.class.name.split('::').last}"
      puts
      puts
      puts "DO NOT EXECUTE IN THE PRODUCTION ENVIRONMENT !!!!!"
      puts
      puts "or with operational data in the archive"
      puts
      puts "THINK CAREFULLY !!! "
      puts
      puts "do you want to continue Y/n" 
      puts
      puts
      
      bBatchmode = false
            
      @my_argv.each{|arg|
         if arg == "batchmode" then
            puts "batch mode execution on"
            bBatchmode = true
            break
         end
      }
       
      if bBatchmode == false then
         c = STDIN.getc
         if c != 'Y' then
            exit(99)
         end
      end   
      
      @@conf = DEC_Environment.new

      @@conf.wrapper_load_config

      @decConfigDir = ENV['DEC_CONFIG']
 
      ## ----------------------------------
      ## initialize logger
      loggerFactory = CUC::Log4rLoggerFactory.new("DECTEST", "#{@decConfigDir}/dec_log_config.xml")
   
      @@logger = loggerFactory.getLogger   
      if @@logger == nil then
         puts
		   puts "Error in #{File.basename(__FILE__)}"
     	   puts "Could not initialize logging system !  :-("
         puts "Check DEC logs configuration under \"#{@decConfigDir}/orchestrator_log_config.xml\"" 
 	      puts
   	   exit(99)
      end

      ## ----------------------------------
      @@conf.wrapper_unset_config
      
   end
   
   ## ------------------------------------------------------

   Test::Unit.at_exit do
      @@logger.info("End of DEC tests #{File.basename(__FILE__)}")
   end

   def setup
      @@logger.info("#{File.basename(__FILE__)}::#{__method__.to_s}")
   end

   def teardown
      @@logger.info("#{File.basename(__FILE__)}::#{__method__.to_s}")
   end

   ## -----------------------------------------------------------
   ##

   def testF0
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -F0"
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end
   ## -----------------------------------------------------------

   ## -----------------------------------------------------------
   ##

   def testF1
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -S \"CCS5.AutoPilot.NAOS.call\" -B \"SleGroundStationMgm SVALS0 CONNECT\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
      sleep(10.0)
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -S \"CCS5.AutoPilot.NAOS.call\" -B \"SleGroundStationMgm SVALS0 DISCONNECT\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end
   ## -----------------------------------------------------------


   ## -----------------------------------------------------------
   ##

   def testF2
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -F2"
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -F0"
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
      @@logger.debug("Waiting 30s to chain next test")
      sleep(30.0)
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end
   ## -----------------------------------------------------------

   def testF3
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -F3 -P \"{\\\"filename\\\" :\\\"/CCS/VARIABLE/INPUTS/previous/2022-09-10T00:00:00.058206_PLA_OSC\\\", \\\"target\\\" :\\\"/CCS/VARIABLE/INPUTS/NATS_TEST_2022-09-10T18:00:00.449688_PLA_OSC_eng_uplink\\\"}\"   "
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## ------------------------------------------------------

   def testF6
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

=begin      
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2016-06-01T00:00:00\\\" , \\\"end\\\" : \\\"2023-06-01T01:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20160601T000000_20230601T010000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
=end

=begin 
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-06T00:00:00\\\" , \\\"end\\\" : \\\"2022-07-09T00:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220607T000000_20220609T000000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
=end

      @@logger.info("GPS 10 min")
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-06T00:00:00\\\" , \\\"end\\\" : \\\"2022-07-06T00:10:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220706T000000_20220706T010000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

      @@logger.info("GPS 1H")
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-06T00:00:00\\\" , \\\"end\\\" : \\\"2022-07-06T01:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220706T000000_20220706T010000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

      @@logger.info("GPS 2H")
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-06T01:00:00\\\" , \\\"end\\\" : \\\"2022-07-06T03:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220706T010000_20220706T030000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

      @@logger.info("GPS 3H")
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-06T03:00:00\\\" , \\\"end\\\" : \\\"2022-07-06T06:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220706T030000_20220706T060000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

      @@logger.info("GPS 6H")
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-06T06:00:00\\\" , \\\"end\\\" : \\\"2022-07-06T12:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220706T060000_20220706T120000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

      @@logger.info("GPS 12H")
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-06T12:00:00\\\" , \\\"end\\\" : \\\"2022-07-07T00:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220706T120000_20220707T000000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

      @@logger.info("GPS 24H")
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"GPS\\\", \\\"start\\\" : \\\"2022-07-07T00:00:00\\\" , \\\"end\\\" : \\\"2022-07-08T00:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-GPS_20220707T000000_20220708T000000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

=begin
      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"MSC\\\", \\\"start\\\" : \\\"2016-06-01T00:00:00\\\" , \\\"end\\\" : \\\"2023-06-01T01:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-MSC_20160601T000000_20230601T010000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)

      cmd = "decNATS -m NAOS_IVV_MCS_SFTP -n NAOS_IVV_MCS_NATS -F6 -P \"{\\\"type\\\" :\\\"THR\\\", \\\"start\\\" : \\\"2016-06-01T00:00:00\\\" , \\\"end\\\" : \\\"2023-06-01T01:00:00\\\", \\\"url\\\" : \\\"/tmp/IVV_DEC_TM-THR_20160601T000000_20230601T010000.xml\\\"}\""
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
=end

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## -----------------------------------------------------------
   ##

   def testF99
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      cmd = "decNATS -n NAOS_IVV_MCS_NATS -F99"
      @@logger.info(cmd)
      ret = system(cmd)
      assert(ret, cmd)
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end
   ## -----------------------------------------------------------

end


## ===================================================================




