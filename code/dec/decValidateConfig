#!/usr/bin/env ruby

# == Synopsis
#
# This is a DEC command line tool that checks the validity of DEC configuration
# files according to DEC's XSD schemas. This tool should be run everytime a 
# configuration change is performed.
#
# -e flag:
#
# With this option the Interfaces (Entities) configuration file (interfaces.xml)
# is validated using the schema interfaces.xsd
#
# -g flag:
#
# With the main DEC configuration file (dec_config.xml)
# is validated using the schema dec_config.xsd
#
# -i flag:
#
# With this option the Incoming file-types configuration file (ft_incoming_files.xml)
# is validated using the schema ft_incoming_files.xsd
#
# -o flag:
#
# With this option the Outgoing file-types configuration file (ft_outgoing_files.xml)
# is validated using the schema ft_outgoing_files.xsd
#
# -m flag:
#
# With this option the DEC Mail configuration file (ft_mail_config.xml) is
# validated using the schema ft_mail_config.xsd
#
# -l flag:
#
# With this option the DEC Logs configuration file (dec_log_config.xml) is
# validated using the schema dec_log_config.xsd
#
# -t flag:
#
# With this option the (DIM)In-Trays configuration file (files2InTrays.xml) is
# validated using the schema files2InTrays.xsd
#
# -a flag:
#
# This is the all flag, which performs all the checks described before.
#
#
# == Usage
#  -a     Check all DEC configuration files
#  -g     Check DEC's general configuration file dec_config.xml
#  -e     Check the Entities Configuration file interfaces.xml
#  -m     Check the mail configuration file ft_mail_config.xml
#  -i     Check the incoming file-types configuration file ft_incoming_files.xml
#  -i     Check the outgoing file-types configuration file ft_outgoing_files.xml
#  -t     Check the In-Trays configuration file files2InTrays.xml
#  -h     shows this help
#  -v     shows version number
#    
# 
# == Author
# DEIMOS-Space S.L. (rell)
#
# == Copyright
# Copyright (c) 2007 ESA - DEIMOS Space S.L.
#

#########################################################################
#
# Data Exchange Component
# 
# Git: $Id$: decValidateConfig,v 1.6 2007/11/30 10:11:39 decdev Exp $
#
#########################################################################

require 'getoptlong'

require 'dec/DEC_Environment'


# MAIN script function
def main

   include DEC

   @isDebugMode      = false
   @bIncoming        = false
   @bEntities        = false
   @bMail            = false
   @bGeneral         = false
   @bAll             = false
   @bTrays           = false
   @bLog             = false
   @bShowVersion     = false
   @bShowUsage       = false
   @bOutgoing        = false

   opts = GetoptLong.new(
     ["--all", "-a",             GetoptLong::NO_ARGUMENT],
     ["--incoming", "-i",        GetoptLong::NO_ARGUMENT],
     ["--outgoing", "-o",        GetoptLong::NO_ARGUMENT],
     ["--tray", "-t",            GetoptLong::NO_ARGUMENT],
     ["--entities", "-e",        GetoptLong::NO_ARGUMENT],
     ["--log", "-l",             GetoptLong::NO_ARGUMENT],     
     ["--mail", "-m",            GetoptLong::NO_ARGUMENT],
     ["--general", "-g",         GetoptLong::NO_ARGUMENT],
     ["--usage", "-u",           GetoptLong::NO_ARGUMENT],
     ["--version", "-v",         GetoptLong::NO_ARGUMENT],
     ["--Debug", "-D",           GetoptLong::NO_ARGUMENT],
     ["--help", "-h",            GetoptLong::NO_ARGUMENT]
     )
    
   begin
      opts.each do |opt, arg|
         case opt
            when "--version"  then @bShowVersion      = true
            when "--Debug"    then @isDebugMode       = true
            when "--help"     then @bShowUsage        = true
            when "--incoming" then @bIncoming         = true
            when "--outgoing" then @bOutgoing         = true
            when "--entities" then @bEntities         = true
            when "--log"      then @bLog              = true
	         when "--mail"     then @bMail             = true
	         when "--general"  then @bGeneral          = true
            when "--all"      then @bAll              = true
            when "--tray"     then @bTrays            = true
            when "--usage"    then @bShowUsage        = true
         end
      end
   rescue Exception
     exit(99)
   end
 
   if @bShowVersion == true then
      print("\nESA - DEIMOS-Space S.L. ", File.basename($0), " Version: [#{DEC.class_variable_get(:@@version)}]", "\n\n")
      hRecord = DEC.class_variable_get(:@@change_record)
      hRecord.each_pair{|key, value|
         puts "#{key} => #{value}"
      }      
      exit(0)
   end

   if @bShowUsage == true then
      usage
      exit(0)
   end
 
   if @bLog == false and @bOutgoing == false and @bIncoming == false and @bEntities == false and @bAll == false and @bMail == false and @bTrays == false and @bGeneral == false then
      usage
      exit(66)
   end

   if self.check_environment == false then
      puts
      self.printEnvironmentError
      puts
      exit(66)
   end

   bReturn = true

   # Check DEC's general configuration files dec_config.xml
   
   if @bGeneral == true or @bAll == true then
      puts "================================================"
      puts "Checking dec_config.xml..."
      
      ret = validate("dec_config")

      if !bReturn or !ret then
         bReturn = false
      end

      puts "================================================"
   end

   # Check the Entities Configuration file interfaces.xml
   
   if @bEntities == true or @bAll == true then
      puts "================================================"
      puts "Checking interfaces.xml..."
      
      ret = validate("interfaces")

      if !bReturn or !ret then
         bReturn = false
      end

      puts "================================================"
   end

   # Check the incoming file-types configuration file ft_incoming_files.xml
   
   if @bIncoming == true or @bAll == true then
      puts
      puts "================================================"
      puts "Checking ft_incoming_files.xml..."
      puts
      
      ret = validate("ft_incoming_files")

      if !bReturn or !ret then
         bReturn = false
      end


      puts "================================================"
   end

   # Check the incoming file-types configuration file ft_outgoing_files.xml
   
   if @bOutgoing == true or @bAll == true then
      puts
      puts "================================================"
      puts "Checking ft_outgoing_files.xml..."
      puts
      
      ret = validate("ft_outgoing_files")

      if !bReturn or !ret then
         bReturn = false
      end


      puts "================================================"
   end

   # Check the In-Trays configuration file files2InTrays.xml

   if @bAll == true or @bTrays == true then
      puts "================================================"
      puts "Checking files2InTrays.xml..."
      puts
      
      ret = validate("files2InTrays")

      if !bReturn or !ret then
         bReturn = false
      end
      
      puts "================================================"            
   end

   # Check the mail configuration file ft_mail_config.xml

   if @bAll == true or @bMail == true then
      puts "================================================"
      puts "Checking ft_mail_config.xml..."
      puts
 
      ret = validate("ft_mail_config")

      if !bReturn or !ret then
         bReturn = false
      end

      puts "================================================"         
   end

   # Check the mail configuration file ft_mail_config.xml

   if @bAll == true or @bLog == true then
      puts "================================================"
      puts "Checking dec_log_config.xml..."
      puts
 
      ret = validate("dec_log_config")

      if !bReturn or !ret then
         bReturn = false
      end

      puts "================================================"         
   end


   if bReturn == true then
      exit(0)
   else
      exit(99)
   end
   
end
#-------------------------------------------------------------
# Check the given XML file using the corresponding XSD schema file

def validate (fileName)
   rootPath = File.join(File.dirname(File.expand_path(__FILE__)), "../../schemas")

   cmd = "xmllint --schema #{rootPath}/#{fileName}.xsd #{ENV['DEC_CONFIG']}/#{fileName}.xml --noout"

   if @isDebugMode == true then
      puts cmd
   end

   ret = system(cmd)
   
   if ret == false then
      puts "Fail schema check for #{fileName}"
   end
   
   return ret   
end
#-------------------------------------------------------------

#-------------------------------------------------------------

## -------------------------------------------------------------

# Print command line help
def usage
   fullpathFile = File.expand_path(__FILE__)
   
   value = `#{"head -67 #{fullpathFile}"}`
      
   value.lines.drop(1).each{
      |line|
      len = line.length - 1
      puts line[2, len]
   }
end
## -------------------------------------------------------------


## ========================================================================
## Start of the main body
main
## End of the main body
## ========================================================================
