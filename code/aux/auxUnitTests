#!/usr/bin/env ruby -W0

#########################################################################
##
## === Ruby source for #AUX_TestCases class
##
## === Written by DEIMOS Space S.L.
##
## === AUX Module
##
## # git: auxUnitTests,v $Id$: 
## 
## module AUX
##
#########################################################################

require 'rubygems'
require 'test/unit'
require 'fileutils'

require 'cuc/DirUtils'
require 'cuc/Log4rLoggerFactory'

require 'aux/AUX_Environment'
require 'aux/AUX_Handler_IERS_Leap_Second'
require 'aux/AUX_Handler_IGS_Broadcast_Ephemeris'
require 'aux/AUX_Handler_NOAA_RSGA_Daily'
require 'aux/AUX_Handler_IERS_EOP_Daily'

# Select a single test of the suite

# ruby auxUnitTests -n test_my_method 

# > NAOS
# test_NAOS_NASA_NBULA
# test_NAOS_NASA_NBULC

class AUXTestCase < Test::Unit::TestCase

   include CUC::DirUtils
   include Test::Unit::Data
   include AUX
      
   # Order of the test cases execution according to defintion within code
   self.test_order = :defined
   
   ## ------------------------------------------------------
   
   Test::Unit.at_start do
   
      @@conf      = AUX_Environment.new
      @@testDir   = "/tmp/aux"

      @@conf = AUX_Environment.new

      @@conf.wrapper_load_config
      @@logger = @@conf.wrapper_load_logger("AUXTEST")

      @auxConfigDir = ENV['AUX_CONFIG']
 
      ## ----------------------------------
      # @@conf.wrapper_unset_config
            
   end
   
   ## --------------------------------------------------------
   
   Test::Unit.at_exit do
      @@logger.info("End of AUX tests #{File.basename(__FILE__)}")
   end
   ## --------------------------------------------------------   
   
   ## Setup before every test-case
   ##
   def setup
      @@logger.info("#{File.basename(__FILE__)}::#{__method__.to_s}")
      checkDirectory(@@testDir)
      #FileUtils.cp("code/aux/examples/Leap_Second.dat",      @@testDir)
     
      # FileUtils.cp("code/aux/examples/finals2000A.daily",    @@testDir)
      # FileUtils.cp("code/aux/examples/brdc0060.20n",         @@testDir)
      # FileUtils.cp("code/aux/examples/brdc0060.20n.Z",       @@testDir)
      # FileUtils.cp("code/aux/examples/20200101RSGA.txt",     @@testDir)

   end
   ## --------------------------------------------------------
   ## After every test case

   def teardown
      @@logger.info("#{File.basename(__FILE__)}::#{__method__.to_s}")
   end
   ## --------------------------------------------------------

   def test_IERS_BULA_ASCII_NAOS
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

      @@logger.debug("cp code/aux/examples/iers/bulletinA.txt #{@@testDir}")
      FileUtils.cp("code/aux/examples/iers/bulletinA.txt",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_IERS_BULA = "#{@@testDir}/bulletinA.txt"
      cmd = "auxConverter -m NAOS -f #{file_IERS_BULA} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA CDDIS BULA to NAOS mission")

      arr = Dir["/tmp/aux_out2/NS1*AUX_BULA__*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_IERS_BULA_NAOS
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

      @@logger.debug("cp code/aux/examples/iers/bulletina-xxxv-039.xml #{@@testDir}")
      FileUtils.cp("code/aux/examples/iers/bulletina-xxxv-039.xml",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_IERS_BULA = "#{@@testDir}/bulletina-xxxv-039.xml"
      cmd = "auxConverter -m NAOS -f #{file_IERS_BULA} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA CDDIS BULA to NAOS mission")

      arr = Dir["/tmp/aux_out2/NS1*AUX_BULA__*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_OEM2ORBRES
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

      @@logger.debug("cp code/aux/examples/naos/NS1_OPER_ORB_OEM____20100825T000000_20100827T000000_0001.OEM #{@@testDir}")
      FileUtils.cp("code/aux/examples/naos/NS1_OPER_ORB_OEM____20100825T000000_20100827T000000_0001.OEM", @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_OEM = "#{@@testDir}/NS1_OPER_ORB_OEM____20100825T000000_20100827T000000_0001.OEM"
      cmd      = "auxConverter -m NAOS -f #{file_OEM} -d /tmp/aux_out2 -D"
      @@logger.info(cmd)
      assert(system(cmd), "convert CCSDS OEM (NAOS mission) to EOCFI AUX_ORBRES")

      arr = Dir["/tmp/aux_out2/NS1*AUX_ORBRES*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------


   ## --------------------------------------------------------

   def test_NAOS_IERS_BULC
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
   
      @@logger.debug("cp code/aux/examples/iers/Leap_Second.dat #{@@testDir}")
      FileUtils.cp("code/aux/examples/iers/Leap_Second.dat",     @@testDir)
   
      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)
   
      file_IERS_BULC = "#{@@testDir}/Leap_Second.dat"
      cmd = "auxConverter -m NAOS -f #{file_IERS_BULC} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert IERS BULC to NAOS mission")
   
      arr = Dir["/tmp/aux_out2/NS1*AUX_BULC__*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0
   
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end
   
   ## --------------------------------------------------------

   def test_NAOS_NASA_NBULA
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      @@logger.debug("cp code/aux/examples/nasa_cddis/finals2000A.data #{@@testDir}")
      FileUtils.cp("code/aux/examples/nasa_cddis/finals2000A.data",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_NASA_NBULA = "#{@@testDir}/finals2000A.data"
      cmd = "auxConverter -m NAOS -f #{file_NASA_NBULA} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA CDDIS BULA to NAOS mission")

      arr = Dir["/tmp/aux_out2/NS1*AUX_NBULA*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_NAOS_NASA_NBULC
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      @@logger.debug("cp code/aux/examples/nasa_cddis/tai-utc.dat #{@@testDir}")
      FileUtils.cp("code/aux/examples/nasa_cddis/tai-utc.dat",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_NASA_NBULC = "#{@@testDir}/tai-utc.dat"
      cmd = "auxConverter -m NAOS -f #{file_NASA_NBULC} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA CDDIS BULC to NAOS mission")

      arr = Dir["/tmp/aux_out2/NS1*AUX_NBULC*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_S2_NASA_NBULC
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      @@logger.debug("cp code/aux/examples/nasa_cddis/tai-utc.dat #{@@testDir}")
      FileUtils.cp("code/aux/examples/nasa_cddis/tai-utc.dat",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_NASA_NBULC = "#{@@testDir}/tai-utc.dat"
      cmd = "auxConverter -m S2 -f #{file_NASA_NBULC} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA CDDIS BULC to Copernicus Sentinel-2 mission")

      arr = Dir["/tmp/aux_out2/S2*UT1UTC*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_NAOS_CELESTRAK_SFS
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      @@logger.debug("cp code/aux/examples/celestrak/SW-Last5Years.txt #{@@testDir}")
      FileUtils.cp("code/aux/examples/celestrak/SW-Last5Years.txt",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_sfs = "#{@@testDir}/SW-Last5Years.txt"
      cmd      = "auxConverter -m NAOS -f #{file_sfs} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert Celestrak Space Weather SFS to NAOS mission")

      arr = Dir["/tmp/aux_out2/NS1*AUX_SFS___*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")      
   end
   ## --------------------------------------------------------



   ## --------------------------------------------------------

   def test_NAOS_NASA_SFL
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      @@logger.debug("cp code/aux/examples/nasa_msfc/jul2022f10_prd.txt #{@@testDir}")
      FileUtils.cp("code/aux/examples/nasa_msfc/jul2022f10_prd.txt",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      file_sfs = "#{@@testDir}/jul2022f10_prd.txt"
      cmd      = "auxConverter -m NAOS -f #{file_sfs} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA Marshall Solar Cycle Forecast to NAOS mission AUX SFL")

      arr = Dir["/tmp/aux_out2/NS1*AUX_SFL___*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")      
   end
   ## --------------------------------------------------------

   ## --------------------------------------------------------

   def test_Celestrak_TLE
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
         
      @@logger.debug("cp code/aux/examples/celestrak/gp.php?CATNR=35681 #{@@testDir}")
      FileUtils.cp("code/aux/examples/celestrak/gp.php?CATNR=35681",     @@testDir)
   
      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)
   
      file_tle = "#{@@testDir}/gp.php?CATNR=35681"
      cmd      = "auxConverter -m NAOS -f #{file_tle} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert Celestrak TLE to NAOS mission AUX_TLE___")
   
      arr = Dir["/tmp/aux_out2/NS1*AUX_TLE___*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0
   
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")      
   end
   ## --------------------------------------------------------

   ## --------------------------------------------------------

   def test_Celestrak_TLE_KSAT
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      @@logger.debug("cp code/aux/examples/celestrak/gp.php?CATNR=35681 #{@@testDir}")
      FileUtils.cp("code/aux/examples/celestrak/gp.php?CATNR=35681",     @@testDir)

      cmd = "rm -f /tmp/aux_out2/NAOS1*.tle"
      @@logger.debug(cmd)
      system(cmd)

      file_tle = "#{@@testDir}/gp.php?CATNR=35681"
      cmd      = "auxConverter -m KSAT -f #{file_tle} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert Celestrak TLE to KSAT standard")

      arr = Dir["/tmp/aux_out2/NAOS1*.tle"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")      
   end
   ## --------------------------------------------------------



   ## --------------------------------------------------------

   def test_Celestrak_TCA
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      cmd = "rm -f /tmp/aux_out2/NS1*"
      @@logger.debug(cmd)
      system(cmd)

      cmd = "cp -f \"code/aux/examples/celestrak/gp.php?GROUP=active&FORMAT=2le\" #{@@testDir}"
      @@logger.debug(cmd)
      ret = system(cmd)
        
      file_tca = "\"#{@@testDir}/gp.php?GROUP=active&FORMAT=2le\""
      cmd      = "auxConverter -m NAOS -f #{file_tca} -d /tmp/aux_out2"
      @@logger.info(cmd)
      assert(system(cmd), "convert Celestrak TCA to NAOS mission AUX_TCA___")
   
      arr = Dir["/tmp/aux_out2/NS1*AUX_TCA___*"]
      @@logger.info("#{arr.length} file converted")
      assert_operator arr.length, :>, 0

      
      @@logger.info("#{@@testDir}")

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")      
   end
   ## --------------------------------------------------------

   def test_NOAA_RSGA
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")
      
      cmd = "rm -f /tmp/aux_out2/S*"
      @@logger.debug(cmd)
      system(cmd)

      @@logger.debug("cp code/aux/examples/noaa/20230114RSGA.txt #{@@testDir}")
      FileUtils.cp("code/aux/examples/noaa/20230114RSGA.txt",     @@testDir)

      rsga        = "#{@@testDir}/20230114RSGA.txt"
      cmd         = "auxConverter -m S3 -f #{rsga} -d /tmp/aux_out2 -D"
      @@logger.info(cmd)
      assert(system(cmd), "converter NOAA Report Solar Geophysical Activity")

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end
   ## --------------------------------------------------------

=begin
   def test_NAOS_NASA_SRTMDEM
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

      file_srtmgl1 = "/Users/borja/Projects/dec/code/aux/examples/nasa_eosdis/SRTMDEM/N42W006.hgt"

      cmd      = "auxConverter -m NAOS -f #{file_srtmgl1} -d /tmp/"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA SRTMGL1 V3 to NAOS mission DEM")

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_NAOS_USGS_SRTMDEM
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

      file_srtmgl1 = "/Users/borja/Projects/dec/code/aux/examples/nasa_eosdis/SRTMDEM/n42_w006_1arc_v3.tif"

      cmd      = "auxConverter -m NAOS -f #{file_srtmgl1} -d /tmp/ -D"
      @@logger.info(cmd)
      assert(system(cmd), "convert USGS SRTMGL1 V3 geotiff to NAOS mission DEM")

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_NAOS_NASA_ASTGTM
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

      dir_astgtm = "/Users/borja/Projects/dec/code/aux/examples/nasa_eosdis/TEST_ASTERV3DEM"

      cmd      = "auxConverter -m NAOS -f #{dir_astgtm} -d /tmp/"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA ASTGTM V3 to NAOS mission DEM")

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

   ## --------------------------------------------------------

   def test_NAOS_NASA_RFM
      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} START")

      dir_modis = "/Users/borja/Projects/dec/code/aux/examples/nasa_eosdis/MOD09A1"

      cmd      = "auxConverter -m NAOS -f #{dir_modis} -d /tmp/"
      @@logger.info(cmd)
      assert(system(cmd), "convert NASA MODIS V6.1 to NAOS mission packaging")

      @@logger.info("#{self.class.name.split('::').last}::#{__method__.to_s} END")
   end

=end
   



=begin
   def test_auxConverter
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
#      cmd = "auxConverter -v"
#      puts cmd
#      assert(system(cmd), "version")
#      
#      cmd = "auxConverter -h"
#      puts cmd
#      assert(system(cmd), "help")
#
      file_leap_second = "#{@@testDir}/Leap_Second.dat"

      cmd         = "auxConverter -f #{file_leap_second} -d /tmp/aux_out1"
      puts cmd
      puts
      assert(system(cmd), "converter leap second")

      eop = "#{@@testDir}/finals2000A.daily"

      cmd         = "auxConverter -f #{eop} -d /tmp/aux_out1"
      puts cmd
      puts
      assert(system(cmd), "converter leap second")


      gps_daily = "#{@@testDir}/brdc0060.20n"

      cmd = "auxConverter -f #{gps_daily} -d /tmp/aux_out2"
      puts cmd
      assert(system(cmd), "converter GPS broadcast daily")

      puts
      gps_daily   = "#{@@testDir}/brdc0060.20n.Z"
      cmd         = "auxConverter -f #{gps_daily} -d /tmp/aux_out3"
      puts cmd
      puts
      assert(system(cmd), "converter Compressed GPS broadcast daily")

      puts
      rsga   = "#{@@testDir}/20200101RSGA.txt"
      cmd         = "auxConverter -f #{rsga} -d /tmp/aux_out4"
      puts cmd
      puts
      assert(system(cmd), "converter NOAA Report Solar Geophysical Activity")


   end
   
   ## --------------------------------------------------------
   
   
   ## --------------------------------------------------------

   def test_iers2
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
   
      eop = "#{@@testDir}/finals2000A.daily"
      
      handler = AUX_Handler_IERS_EOP_Daily.new(eop, "S3", "/tmp/kk1")
      
      handler.setDebugMode
      
      newName = handler.convert
      
      puts newName
                  
      assert(File.exist?(newName), "rename performed")
   
   end
   ## --------------------------------------------------------

   def test_iers
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
   
      file_leap_second = "#{@@testDir}/Leap_Second.dat"
      
      handler = AUX_Handler_IERS_Leap_Second.new(file_leap_second, "S3", "/tmp/kk1")
      
      handler.setDebugMode
      
      newName = handler.convert
                  
      assert(File.exist?(newName), "rename performed")
            
   end
   ## --------------------------------------------------------

   ## This test creates every necessary directory to make the circulations succeed
   def test_igs
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
      igs = "#{@@testDir}/brdc0060.20n.Z"
      
      handler = AUX_Handler_IGS_Broadcast_Ephemeris.new(igs, "S3", "/tmp/kk2")
      
      handler.setDebugMode
      
      newName = handler.convert
      
      puts newName
                  
      assert(File.exist?(newName), "rename performed")

   end
   ## ------------------------------------------------------

   ## --------------------------------------------------------

   ## This test creates every necessary directory to make the circulations succeed
   def test_noaa
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
      rsga = "#{@@testDir}/20200101RSGA.txt"
      
      handler = AUX_Handler_NOAA_RSGA_Daily.new(rsga, "S3", "/tmp/kk2")
      
      handler.setDebugMode
      
      newName = handler.convert
      
      puts newName
                  
      assert(File.exist?(newName), "rename performed")

   end
   ## ------------------------------------------------------

=end

end

## =====================================================================
