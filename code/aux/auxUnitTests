#!/usr/bin/env ruby

#########################################################################
#
# === Ruby source for #DEC_TestCases class
#
# === Written by DEIMOS Space S.L.
#
# === AUX Module
#
# # git: auxUnitTests,v $Id$: 
# 
# module AUX
#
#########################################################################

require 'rubygems'
require 'test/unit'
require 'fileutils'

require 'cuc/DirUtils'

require 'aux/AUX_Environment'
require 'aux/AUX_Handler_IERS_Leap_Second'
require 'aux/AUX_Handler_IGS_Broadcast_Ephemeris'

# Select a single test of the suite

# ruby auxUnitTests -n test_my_method 

class AUXTestCase < Test::Unit::TestCase

   include CUC::DirUtils
   include Test::Unit::Data
   include AUX
   
      
   # Order of the test cases execution according to defintion within code
   self.test_order = :defined
   
   ## ------------------------------------------------------
   
   Test::Unit.at_start do
   
      @@conf = AUX_Environment.new
      
      @@testDir = "/tmp/aux"
            
      
   end
   
   ## --------------------------------------------------------
   
   Test::Unit.at_exit do
      puts "End of DEC tests mail"
   end
   ## --------------------------------------------------------   
   
   ## Setup before every test-case
   ##
   def setup
      checkDirectory(@@testDir)
      FileUtils.cp("/Users/borja/Projects/dec/code/aux/examples/Leap_Second.dat", @@testDir)
   end
   ## --------------------------------------------------------
   ## After every test case

   def teardown
   end
   ## --------------------------------------------------------

   def test_auxConverter
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
      cmd = "auxConverter -v"
      puts cmd
      assert(system(cmd), "version")
      
      cmd = "auxConverter -h"
      puts cmd
      assert(system(cmd), "help")

      file_leap_second = "#{@@testDir}/Leap_Second.dat"

      cmd = "auxConverter -f #{file_leap_second}"
      puts cmd
      assert(system(cmd), "converter")

   end
   ## --------------------------------------------------------

   def test_iers
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
   
      file_leap_second = "#{@@testDir}/Leap_Second.dat"
      
      puts 
   
      handler = AUX_Handler_IERS_Leap_Second.new(file_leap_second, "S3")
      
      handler.setDebugMode
      
      newName = handler.convert
      
      puts newName
            
      assert(File.exist?(newName), "rename performed")
            
   end
   ## --------------------------------------------------------

   ## This test creates every necessary directory to make the circulations succeed
   def test_igs
      puts
      puts "================================================"
      puts "AUX_UnitTests::#{__method__.to_s}"
      puts
   
      # parser = AUX_Parser_IGS_Broadcast_Ephemeris.new("/Users/borja/Projects/dec/code/aux/brdc/brdc0010.20g")
   end
   ## ------------------------------------------------------

end

## =====================================================================
