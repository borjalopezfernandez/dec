#!/usr/bin/env ruby
#
# == Usage
# auxConverter -f <full_path_file>
#     --version         shows the version number
#     --Debug           shows Debug info during the execution
#     --help            shows this help
# 
#

#########################################################################
#
# Ruby source for #auxConverter
#
# Written by DEIMOS Space S.L. (bolf)
#
# Data Exchange Component -> 
# 
# git:
#   auxConverter,v $Date$ $Id$ 
#
#########################################################################

require 'rubygems'
require 'getoptlong'

require 'aux/AUX_Environment'
require 'aux/AUX_Handler'


# MAIN script function
def main

   include AUX

   @bUsage           = false
   @isDebugMode      = false
   @bShowVersion     = false
   @full_path_file   = ""
      
   opts = GetoptLong.new(
     ["--file", "-f",               GetoptLong::REQUIRED_ARGUMENT],
     ["--Debug", "-D",              GetoptLong::NO_ARGUMENT],
     ["--version", "-v",            GetoptLong::NO_ARGUMENT],
     ["--help", "-h",               GetoptLong::NO_ARGUMENT]
     )
    
   begin
      opts.each do |opt, arg|
         case opt
            when "--file"              then @full_path_file = arg.to_s
            when "--Debug"             then @isDebugMode    = true
            when "--version"           then @bShowVersion   = true
			   when "--help"              then @bUsage         = true
         end
      end
   rescue Exception => e
      puts e.to_s
      exit(99)
   end

   if @bShowVersion == true then
      print("\nESA - DEIMOS-Space S.L. ", File.basename($0), " Version: [#{AUX.class_variable_get(:@@version)}]", "\n\n")
      hRecord = AUX.class_variable_get(:@@change_record)
      hRecord.each_pair{|key, value|
         puts "#{key} => #{value}"
      }      
      exit(0)
   end
   
   if @bUsage == true then
      usage
      exit(0)
   end
   
   if @full_path_file == "" then
      usage
      exit(99)
   end

   handler = AUX_Handler.new(@full_path_file, "S3", @isDebugMode)
   
   newName = handler.convert
   
   puts newName
   
   exit(0)

end

# -------------------------------------------------------------

# Print command line help
def usage
   fullpathFile = File.expand_path(__FILE__)    
   
   value = `#{"head -10 #{fullpathFile}"}`
      
   value.lines.drop(1).each{
      |line|
      len = line.length - 1
      puts line[2, len]
   }
end
# -------------------------------------------------------------



## ===================================================================
## Start of the main body
main
## End of the main body
##====================================================================
