#!/usr/bin/env ruby

#
# == Usage
# minArcDB --create-tables | --drop-tables [-H]
#     --create-tables   create all minarc required tables
#     --drop-tables     drops all minarc tables
#     --Update-tables   performs a migration update of minarc tables
#     --Happy           it ensures a happy ending despite eventual errors
#     --export-rows     it exports all rows
#     --Debug           shows Debug info during the execution
#     --help            shows this help
# 
# == Author
# DEIMOS-Space S.L.
#
# == Copyright
# Copyright (c) 2008 ESA - DEIMOS Space S.L.
#

#########################################################################
###
### === Ruby source for #minArcDB execytable
###
### === Written by DEIMOS Space S.L. (bolf)
###
### === Mini Archive Component (MinArc)
### 
### module MINARC
###
#########################################################################

require 'rubygems'
require 'active_record'
require 'getoptlong'
require 'rdoc'

require 'arc/MINARC_Environment'


# MAIN script function
def main
   include ARC

   @bUp           = false
   @bDown         = false
   @bUpdate       = false
   @bExport       = false
   @bShowVersion  = false
   @bShowUsage    = false
   @bIsDebugMode  = false
   @bHappy        = false
   
   opts = GetoptLong.new(
     ["--drop-tables",     "-d",       GetoptLong::NO_ARGUMENT],
     ["--create-tables",   "-c",       GetoptLong::NO_ARGUMENT],
     ["--Update-tables",   "-U",       GetoptLong::NO_ARGUMENT],
     ["--Happy",   "-H",               GetoptLong::NO_ARGUMENT],
     ["--export-rows",     "-e",       GetoptLong::NO_ARGUMENT],
     ["--version", "-v",               GetoptLong::NO_ARGUMENT],
     ["--usage",   "-u",               GetoptLong::NO_ARGUMENT],
     ["--Debug",   "-D",               GetoptLong::NO_ARGUMENT],
     ["--help",            "-h",       GetoptLong::NO_ARGUMENT]
     )
    
   begin
      opts.each do |opt, arg|
         case opt      
            when "--create-tables"     then @bUp                  = true
            when "--drop-tables"       then @bDown                = true
            when "--Update-tables"     then @bUpdate              = true
            when "--export-rows"       then @bExport              = true
            when "--usage"             then @bShowUsage           = true
			   when "--help"              then @bShowUsage           = true
            when "--Happy"             then @bHappy               = true
            when "--Debug"             then @bIsDebugMode         = true
            when "--version"           then @bShowVersion         = true
         end
      end
   rescue Exception => e
      # puts e.to_s
      exit(99)
   end

   if @bShowVersion == true then
      print("\nESA - DEIMOS-Space S.L. ", File.basename($0), " Version: [#{ARC.class_variable_get(:@@version)}]", "\n")
      hRecord = ARC.class_variable_get(:@@change_record)
      hRecord.each_pair{|key, value|
         puts "#{key} => #{value}"
      }
      exit(0)
   end

   # -------------------------------------------------------

   if @bShowUsage == true then
      usage
      exit(0)
   end

   # -------------------------------------------------------

   if @bDown and @bUp then
      usage
      exit(0)
   end

   if !@bDown and !@bUp and !@bUpdate and !@bExport then 
      usage
      exit(66)
   end

   # -------------------------------------------------------

   if self.checkEnvironmentEssential == false then
      puts
      self.printEnvironmentError
      puts
      exit(99)
   end

   # -------------------------------------------------------
   
   if @bIsDebugMode == true then
      self.print_environment
   end
   # -------------------------------------------------------

   if ENV["MINARC_ARCHIVE_ROOT"] == nil or ENV["MINARC_ARCHIVE_ROOT"] == "" then
      puts "#{__FILE__} requires local mode configuration / environment unready :-("
      puts
      exit(99)
   end

   require 'arc/MINARC_Migrations'
   require 'arc/MINARC_DatabaseModel'

   if @bDown then
      begin
         CreateArchivedFiles.down
         CreateUsers.down
         if File.exist?(@dbName) == true then
            File.delete(@dbName)
         end
         exit(0)
      rescue Exception => e
         if @bIsDebugMode == true then
            puts e.backtrace
            puts
         end
         puts e.to_s

         if @bHappy == true then
            exit(0)
         else
            exit(99)
         end
      end
   end

   if @bUp then
      begin
         CreateArchivedFiles.up
         CreateUsers.up
         puts "Right !"
         puts "Bye"
      rescue Exception => e
         if @bIsDebugMode == true then
            puts e.backtrace
            puts
         end
         puts e.to_s

         if @bHappy == true then
            exit(0)
         else
            exit(99)
         end
      end
      exit(0)
   end
 
   if @bUpdate then
      
      if ActiveRecord::Base.connection.index_exists?(:archived_files, :filename) == false
         migration2 = AddIndexFilename.new
         migration2.change
      else
         puts "Index on filename already exists :-)"
      end

      if ActiveRecord::Base.connection.index_exists?(:archived_files, :name) == false
         # migration3 = AddNewColumns.new
         # migration3.change_20181216
         migration3 = AddIndexName.new
         migration3.change
      else
         puts "Index on name already exists :-)"
      end
            
      if ArchivedFile.columns_hash["size_in_disk"].type == :integer then
         puts "Updating columns type to bigint: size, size_original, size_in_disk, access_counter"
         migration4 = ModifySizeColumns.new
         migration4.change
      end
      
      exit(0)
      
   end 
 
   if @bExport then
      Export2CSV.new
   end
 
   exit(0)

end

## ---------------------------------------------------------

def usage
   fullpathFile = File.expand_path(__FILE__)
      
   value = `#{"head -18 #{fullpathFile}"}`
      
   value.lines.drop(1).each{
      |line|
      len = line.length - 1
      puts line[2, len]
   }
end

## ---------------------------------------------------------


## ===================================================================
## Start of the main body
main
## End of the main body
## ===================================================================
