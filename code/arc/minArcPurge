#!/usr/bin/env ruby

# == Synopsis
#
# This is a MINARC command line tool that ***DELETES ALL FILES*** !
#
# ***BE CAREFUL*** using this tool because there is NO ROLLBACK  :-|
#
# 
# 
# -Y flag:
#
# This is a confirmation flag
#
# == Usage
# minArcPurge [-Y]
#
#
# == Author
# DEIMOS-Space S.L.
#
# == Copyright
# Copyright (c) 2008 ESA - DEIMOS Space S.L.
#

#########################################################################
###
### === Mini Archive Component (MinArc)
###
### Git: $Id: minArcPurge,v 1.1 2008/11/10 09:39:34 decdev Exp $
###
#########################################################################

require 'getoptlong'
require 'rdoc'

require 'arc/MINARC_Environment'


# MAIN script function

def main
   include ARC
   
   @bConfirmed                = false
   @bShowVersion              = false
   @bShowUsage                = false


   opts = GetoptLong.new(
     ["--Debug", "-D",           GetoptLong::NO_ARGUMENT],
     ["--YES",   "-Y",           GetoptLong::NO_ARGUMENT],
     ["--usage", "-u",           GetoptLong::NO_ARGUMENT],
     ["--version", "-v",         GetoptLong::NO_ARGUMENT],
     ["--help", "-h",            GetoptLong::NO_ARGUMENT]
     )

   begin
      opts.each do |opt, arg|
         case opt      
            when "--Debug"             then @isDebugMode    = true
            when "--YES"               then @bConfirmed     = true
            when "--version"           then @bShowVersion   = true
			   when "--help"              then @bShowUsage     = true
	         when "--usage"             then @bShowUsage     = true
         end
      end
   rescue Exception
      exit(99)
   end

   # -------------------------------------------------------
   #
   # Show the version of the component

   if @bShowVersion == true then
      print("\nESA - DEIMOS-Space S.L. ", File.basename($0), " Version: [#{ARC.class_variable_get(:@@version)}]", "\n")
      hRecord = ARC.class_variable_get(:@@change_record)
      hRecord.each_pair{|key, value|
         puts "#{key} => #{value}"
      }
      exit(0)
   end
      
   # -------------------------------------------------------

   # -------------------------------------------------------

   if @bShowUsage == true then
      usage
      exit(0)
   end

   # -------------------------------------------------------

   if @bConfirmed == false then
      usage
      exit(99)
   end

   # -------------------------------------------------------

   if self.checkEnvironmentEssential == false then
      puts
      self.printEnvironmentError
      puts
      exit(99)
   end

   # -------------------------------------------------------

   pwd = Dir.pwd

   # ------------------------------------------------------------------

   if ENV["MINARC_ARCHIVE_ROOT"] == nil or ENV["MINARC_ARCHIVE_ROOT"] == "" then
      puts "#{__FILE__} requires local mode configuration / environment unready :-("
      puts
      exit(99)
   end

   # ------------------------------------------------------------------

   require 'arc/MINARC_DatabaseModel'

   archiveRoot = ENV["MINARC_ARCHIVE_ROOT"]

   
   puts
   puts "Clean up of the Archive in #{archiveRoot}"
   puts

   
   Dir.chdir(archiveRoot)

   ArchivedFile.delete_all

   cmd = "chmod -R a+x *"
   system(cmd)
   
   cmd = "chmod -R a+w *"
   system(cmd)

   cmd = "\\rm -rf *"
   system(cmd)
   
   exit(0)

end 
#-------------------------------------------------------------
# -------------------------------------------------------------

def usage
   fullpathFile = File.expand_path(__FILE__)
      
   value = `#{"head -24 #{fullpathFile}"}`
      
   value.lines.drop(1).each{
      |line|
      len = line.length - 1
      puts line[2, len]
   }
end

# -------------------------------------------------------------


## ==========================================================================
## Start of the main body
main
## End of the main body
## ===============================================================================
