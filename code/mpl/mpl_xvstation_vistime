#!/usr/bin/env ruby

# == Synopsis
#
# This is a command line tool that generates the ground station visibilities 
# for a given satellite (currently Sentinel2A).
# 
# Inputs required and default locations are:
#   ./data/S2__OPER_MPL_GND_DB
#   ./data/S2A_OPER_MPL_ORBSCT
#   ./data/S2A_OPER_MPL_SWTVIS
#
# Parameters:
# 
# -s / --orbit-abs-start flag:
#
# Parameter for the absolute start orbit
#
#
# -e / --orbit-abs-end flag:
#
# Parameter for the absolute start orbit
#
#
#
# == Usage
# mpl_xvstation_vistime --orbit-abs-start <orbit_start> --orbit-abs-end <orbit_end>
#     --orbit-abs-start <orbit>     absolute start orbit
#     --orbit-abs-end <orbit>       absolute end orbit
#     --Debug     shows Debug info during the execution
#     --help      shows this help
#
# 
# == Author
# Borja Lopez Fernandez
#

require 'getoptlong'
require 'rubygems'

require 'explorer_lib/ruby_explorer_lib'
require 'explorer_visibility/ruby_explorer_visibility'
require 'explorer_orbit/ruby_explorer_orbit'
require 'explorer_data_handling/ruby_explorer_data_handling'

require 'cuc/Converters'

include CUC::Converters


# MAIN script function
def main

   @isDebugMode      = false
   @orbit_abs_start  = 0
   @orbit_abs_end    = 0
   
   opts = GetoptLong.new(
     ["--orbit-abs-start",   "-s",     GetoptLong::REQUIRED_ARGUMENT],
     ["--orbit-abs-end",   "-e",       GetoptLong::REQUIRED_ARGUMENT],
     ["--Debug", "-D",                 GetoptLong::NO_ARGUMENT],
     ["--help", "-h",                  GetoptLong::NO_ARGUMENT]
     )
    
   begin
      opts.each do |opt, arg|
         case opt
            when "--Debug"                then @isDebugMode             = true      
            when "--orbit-abs-start"      then @orbit_abs_start         = arg.to_i
            when "--orbit-abs-end"        then @orbit_abs_end           = arg.to_i
			   when "--help"                 then usage
         end
      end
   rescue Exception => e
      puts e.to_s
      exit(99)
   end

   if @orbit_abs_start == 0 and @orbit_abs_end == 0 then
      usage
   end

   statDB         = "./data/S2__OPER_MPL_GND_DB"
   roef           = "./data/S2A_OPER_MPL_ORBSCT"
   swath          = "./data/S2A_OPER_MPL_SWTVIS"

   dh             = MPL::Explorer_Data_Handling.new
   arrStationID   = dh.ReadStationID(statDB, @isDebugMode)

   vis            = MPL::Explorer_Visibility.new

   arrStationID.each{|station_id|
      outFile  = "S2A_OPER_MPL_GNDVIS_#{station_id}.xml"
   
      puts "Generating #{outFile}"
   
      retVal   = vis.StationVisTimeCompute(
                                    roef, 
                                    swath, 
                                    statDB, 
                                    station_id, 
                                    @orbit_abs_start, 
                                    @orbit_abs_end, 
                                    outFile,
                                    @isDebugMode
                                    )
   }

   exit(0)

end

#-------------------------------------------------------------

# Print command line help
def usage
   fullpathFile = `which #{File.basename($0)}`    
   
   value = `#{"head -36 #{fullpathFile}"}`
      
   value.lines.drop(1).each{
      |line|
      len = line.length - 1
      puts line[2, len]
   }
   exit   
end
#-------------------------------------------------------------


#=====================================================================
# Start of the main body
main
# End of the main body
#=====================================================================
