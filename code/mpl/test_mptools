#!/usr/bin/env ruby

#########################################################################
###
### === Test Wrapper for Ruby to EXPLORER EO CFI by DEIMOS Space S.L.U.      
###
### === Written by Borja Lopez Fernandez
### 
###
#########################################################################

require 'test/unit'

require 'cuc/Converters'
require 'cuc/Log4rLoggerFactory'
require 'mpl/MPL_Environment'
require 'mpl/MPL_Loader_Wrapper_Earth_Explorer'

## 1 - test_mp_xvstation_vistime_compute

class TestCase_MPTOOLS < Test::Unit::TestCase

   include CUC::Converters
   include MPL

   # Order of the test cases execution according to definition within code
   self.test_order = :defined
   
   @my_argv = ARGV.dup
   
   ## ------------------------------------------------------
   
   Test::Unit.at_start do      
      puts
      puts "======================================"
      puts "#{File.basename(__FILE__)} Unit Test Cases"
      puts
      puts
      puts "DO NOT EXECUTE IN THE PRODUCTION ENVIRONMENT !!!!!"
      puts
      puts "or with operational data in the archive"
      puts
      puts "THINK CAREFULLY !!! "
      puts
      puts "do you want to continue Y/n" 
      puts
      puts
      
      bBatchmode = false
            
      @my_argv.each{|arg|
         if arg == "batchmode" then
            puts "batch mode execution on"
            bBatchmode = true
            break
         end
      }
       
      if bBatchmode == false then
         c = STDIN.getc
         if c != 'Y' then
            exit(99)
         end
      end

      @@conf = MPL_Environment.new
      @@conf.wrapper_load_config
      @@conf.wrapper_print_environment

      # ------------------------------------------
      # initialize logger
      
      loggerFactory = CUC::Log4rLoggerFactory.new("#{File.basename(__FILE__)}", "#{ENV['MPL_CONFIG']}/mptools_log_config.xml")

      @@logger = loggerFactory.getLogger
      
      if @@logger == nil then
         puts
		   puts "Error in #{File.basename(__FILE__)}"
		   puts "Could not set up logging system !  :-("
         puts "Check MPL logs configuration under \"#{ENV['MPL_CONFIG']}/mptools_log_config.xml\"" 
		   puts
		   puts
		   exit(99)
      end
      # ------------------------------------------


      @@logger.debug("#{MPL.class_variable_get(:@@version)}")
      
      hRecord = MPL.class_variable_get(:@@change_record)
      hRecord.each_pair{|key, value|
         @@logger.debug("#{key} => #{value}")
      }      

      @@logger.debug("End of #{File.basename(__FILE__)}::#{__method__.to_s}")
       
   end

   ## ------------------------------------------------------
   
   Test::Unit.at_exit do
      @@logger.debug("End of #{File.basename(__FILE__)} Unit Test Cases")
   end
   
   ## ------------------------------------------------------

   ## Setup before every test-case
   ##
   def setup
      @@logger.debug("#{File.basename(__FILE__)}::#{__method__.to_s}")
   end
   ## ------------------------------------------------------

   ## --------------------------------------------------------
   ## After every test case

   def teardown
      @@logger.debug("#{File.basename(__FILE__)}::#{__method__.to_s}")
   end
   ## ------------------------------------------------------

   ## Test to print out the library version

   def test_mp_xvstation_vistime_compute   
      cmd = "mp_xvstation_vistime_compute -v"
      @@logger.debug(cmd)
      assert(system(cmd), "mp_xvstation_vistime_compute version")
      
      cmd = "mp_xvstation_vistime_compute -l"
      @@logger.debug(cmd)
      assert(system(cmd), "mp_xvstation_vistime_compute list stations")

   end
   ## ------------------------------------------------------
   
   ## ------------------------------------------------------
   
end
